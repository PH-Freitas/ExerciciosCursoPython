"""exercicios_aula_2
#SEGUNDA AULA DE PYTHON

##1 - Operadores L√≥gicos
Diferente dos operadores aritm√©ticos, os operadores l√≥gicos retornam **True** üòÄ ou **False** üò† como resposta.

###Operadores Relacionais
S√£o aqueles que fazem a compara√ß√£o entre dois ou mais valores.

####1. Operador de igualdade (==)
"""
# Colocar 7 == 7, verificar a resposta na execuss√£o do programa;
print(7 == 7)
# Colocar 7 == 5, verificar a resposta na execuss√£o do programa;
print(7 == 5)

"""####2. Operadores menor que (<) e maior que (>)

"""

# Colocar 7 < 7, verificar a resposta na execuss√£o do programa;
print(7 < 7)
# Colocar 7 < 10, verificar a resposta na execuss√£o do programa;
print(7 < 10)
# Colocar 7 > 7, verificar a resposta na execuss√£o do programa;
print(7 > 7)
# Colocar 7 > 5, verificar a resposta na execuss√£o do programa;
print(7 > 5)

"""####3. Operadores menor ou igual que (<) e maior ou igual que (>)"""

# Colocar 7 <= 7, verificar a resposta na execuss√£o do programa;
print(7 <= 7)
# Colocar 7 <= 10, verificar a resposta na execuss√£o do programa;
print(7 <= 10)
# Colocar 7 >= 7, verificar a resposta na execuss√£o do programa;
print(7 >= 7)
# Colocar 7 >= 5, verificar a resposta na execuss√£o do programa;
print(7 >= 5)

"""####4. Operador de diferente (!=)"""

# Colocar 7 != 7, verificar a resposta na execuss√£o do programa;
print(7 != 7)
# Colocar 7 != 5, verificar a resposta na execuss√£o do programa;
print(7 != 5)

"""##2 - Tabelas Verdade
S√£o tabelas que mostram algumas situa√ß√µes de entrada e suas sa√≠das

####1. Tabela do E (AND)
O operador **AND** deve ser usado quando temos 2 ou mais condi√ß√µes que devem ser verdadeiras para o programa executar a a√ß√£o desejada
"""

print("|   A\t|   B\t| SA√çDA |")
print("|",False,"|",False,"|",False and False,"|")
print("|",True,"\t|",False,"|",True and False,"|")
print("|",False,"|",True,"\t|",False and True,"|")
print("|",True,"\t|",True,"\t|",True and True,"\t|")

# EXEMPLO: Verificar se uma idade √© maior do que a 17 E menor do que 71.

idade = int(input("Idade: "))
print(idade > 17 and idade < 71)

"""####2. Tabela do OU (OR)
O operador **OR** deve ser usado quando, pelo menos, 1 das condi√ß√µes for verdadeira para realizar uma a√ß√£o desejada
"""

print("|   A\t|   B\t| SA√çDA |")
print("|",False,"|",False,"|",False or False,"|")
print("|",True,"\t|",False,"|",True or False," |")
print("|",False,"|",True,"\t|",False or True," |")
print("|",True,"\t|",True,"\t|",True or True," |")

# EXEMPLO: Verificar se uma idade √© menor do que a 18 OU maior do que 70.

idade = int(input("Idade: "))
print(idade < 18 or idade > 70)

"""####3. Tabela do XOR (^)"""

print("|   A\t|   B\t| SA√çDA |")
print("|",False,"|",False,"|",False ^ False,"|")
print("|",True,"\t|",False,"|",True ^ False,"\t|")
print("|",False,"|",True,"\t|",False ^ True,"\t|")
print("|",True,"\t|",True,"\t|",True ^ True,"|")

# Reprodu√ß√£o de porcos
# Coloque 0 para leit√£o e 1 para leitoa em uma lista
leitao = 0
porquinha = 1
filhote = leitao ^ porquinha
print(filhote)

"""####4. Tabela de Nega√ß√£o (not)"""

print("|   A\t| N√£o A |")
print("|",False,"|",not False,"\t|")
print("|",True,"\t|",not True,"|")

"""##3 - Condicionais

#### Condi√ß√£o SE (IF)
Usamos este tipo de condicional quando necessitamos que o programa teste algumas condi√ß√µes. Caso a condi√ß√£o seja verdadeira, o programa executar√° uma a√ß√£o destinada √†quela condi√ß√£o.

```
if condi√ß√£o 1:
    bloco de c√≥digos do if

```
Faz-se necess√°rio que o c√≥digo tenha esta estrutura, sen√£o o Python apresentar√° erro de identa√ß√£o.
"""

n = 3
if n == 2:
    print("{} igual a 2".format(n))

"""#### Condi√ß√£o SEN√ÉO (ELSE)
Para usar o else, temos que ter usado o if antes.
```
if condi√ß√£o 1:
    bloco de c√≥digos do if
    
else:
    bloco de c√≥digo do else.
    Aqui finaliza a condicional
```
"""

n = 3
if n == 2:
    print("{} igual a 2".format(n))
else:
    print("{} diferente a 2".format(n))

"""#### Condi√ß√£o SEN√ÉO SE (ELIF)
O elif deve ser utilizado quando temos mais do que uma condi√ß√£o.


```
if condi√ß√£o 1:
    bloco de c√≥digos do if

elif condi√ß√£o 2:
    bloco de c√≥digo do elif
    
else:
    bloco de c√≥digo do else.
    Aqui finaliza a condicional
```


"""

ano_nascimento = int(input("Digite seu ano de nascimento\n"))
idade = 2022 - ano_nascimento
if idade < 12:
  print("crian√ßa")
elif idade >= 12 and idade <=18:
     print("Aborrecente")
elif idade >= 18 and idade <=35:
     print("Jovem adulto")
elif idade >= 35 and idade <=50:
     print("Adulto come√ßando a ficar velho") 
elif idade >= 50 and idade <=100:
     print("Melhor idade para viver")
else:
     print("Procure o hospital mais pr√≥ximo")

"""##4 - Exerc√≠cios

###1 - Qual o maior.
*Escreva um programa que recebe 2 valores e devolve o maior entre eles.*
"""

# Declara√ß√£o da vari√°vel 1
x = int(input("Digite um n√∫mero:\n"))
# Declara√ß√£o da vari√°vel 2
y = int(input("Digite um numero:\n"))
# Imprimir na tela mensagem: "O X √© maior do que o Y"
if x > y:
  print(x)
else:
  print(y)

"""### 2 - Calculadora de pre√ßo da laranja.
*Cada laranja custa R\$ 0,3. Mas quando compradas acima de uma d√∫zia, seu valor cai para R\$ 0,25 cada*
"""

# Declarar a entrada da quantidade de laranjas a ser comprada
qlaranja = int(input("Digite a quantidade de laranjas a ser comprada: "))
# Declara√ß√£o de if
if qlaranja >= 12:
   plaranja = 0.25
   resultado = qlaranja * plaranja
   print("{} * {} = {}".format(qlaranja,plaranja,resultado))
# Declara√ß√£o else
else:
  plaranja = 0.3
  resultado = qlaranja * plaranja
  print("{} * {} = {}".format(qlaranja,plaranja,resultado))
# Imprimir na tela a mensagem: "x laranjas por Y reais totaliza: R$ Z"

"""###3 - Caluladora de Peso Ideal 
Fazer uma calculadora em que o usu√°rio digita Altura em metros e Peso em quilos e se √© do sexo biol√≥gico Masculino ou Feminino. O programa devolve ao usu√°rio a informa√ß√£o qual seu peso ideal e quando precisa emagrecer para chegar l√°. 
Ao final, o programa deve trazer uma frase motivadora para aqueles que est√£o acima do peso, frase parabenizando os que est√£o no peso ideal e uma outra frase de alerta aos que est√£o abaixo do peso.
***F√≥rmulas***

        >Masculino: (72.7 * Altura) - 50
        >Feminino: (62.1 * Altura) - 44.7

"""

# Declarar a entrada da Altura
altura = float(input("Digite sua altura:\n"))
# Declarar a entrada do Peso
peso = float(input("Digite seu peso:\n"))
# Declarar a entrada do Sexo Biol√≥gico
sexo = input("Digite seu sexo biol√≥gico\n")
# Declara√ß√£o de if para calcular peso ideal
if sexo == "masculino" :
   pesoideal = (72.7 * altura) - 50
# Declara√ß√£o de elif para calcular peso ideal
elif sexo == "feminino" :
     pesoideal = (62.1 * altura) - 44.7
# Declara√ß√£o else
else:
     print('Erro!')
# Calcular diferen√ßa entre peso ideal e peso atual
diferen√ßam = pesoideal - altura * peso 
diferen√ßaf = pesoideal - altura * peso
# Declara√ß√£o de if para acima do peso - A devolutiva para o usu√°rio vem dentro do if
acimadopeso = altura * peso
if pesoideal < acimadopeso :
  print("Voc√™ est√° acima do peso, mas n√£o se preocupe, com foco voc√™ consegue mudar isso !!!")
# Declara√ß√£o de elif para abaixo do peso - A devolutiva para o usu√°rio vem dentro do elif
elif pesoideal > acimadopeso:
  print("Voc√™ est√° abaixo do peso, mas n√£o se preocupe, com foco voc√™ consegue mudar isso !!!")
# Declara√ß√£o de else - A devolutiva para o usu√°rio vem dentro do else
else:
  print("Voce est√° no peso ideal")

"""###4 - √â triangulo ou N√£o √© tri√¢ngulo?
Para determinar se 3 segmentos de reta formam um tri√¢ngulo, podemos fazer a verifica√ß√£o se a soma dos dois menores segmentos √© maior do que o segmento maior.

---
    Segmentos: 2, 3 e 4
    Soma dos dois menores: 2 + 3 = 5
    Verifica√ß√£o: 5 > 4
    Conclus√£o:Estes segmentos formam um tri√¢ngulo
---
"""

# Declara√ß√£o do primeiro segmento
seg1 = int(input("Digite o primeiro segmento:\n"))
# Declara√ß√£o do segundo segmento
seg2 = int(input("Digite o segundo segmento:\n"))
# Declara√ß√£o do terceiro segmento
seg3 = int(input("Digite o terceiro segmento:\n"))
# Neste if, usar AND para avaliar se o 1¬∫ segmento √© o menor
if seg1 > seg2 and seg1 > seg3:
   veri = seg3 + seg2
   print("O segmento 1 √© o maior")
# Neste elif, usar AND para avaliaar se o 2¬∫ segmento √© o maior
elif seg2 > seg1 and seg2 > seg3:
   veri = seg1 + seg3
   print("O segmento 2 √© o maior")
# Neste elif, usar AND para avaliar se o 3¬∫ segmento √© o maior
elif seg3 > seg1 and seg3 > seg2:
   veri = seg1 + seg2
   print("O segmento 3 √© o maior")
# Else para poss√≠veis erros de digita√ß√£o
else:
   print("Erro de digita√ß√£o!!!")
# Verifica√ß√£o se √© tri√¢ngulo e informar ao usu√°rio.
if(veri > max(seg1,seg2,seg3)):
   print("Estes segmentos formam um tri√¢ngulo!")
else:
   print("Estes segmentos n√£o formam um tri√¢ngulo!")